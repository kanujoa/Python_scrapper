1. 첫 페이지의 pagination(페이지 번호)에서 몇 개의 페이지가 있는지 알아내는 코드를 작성해 볼 것이다.
첫번째 페이지 화면에서는 최대 5개의 페이지가 있다는 것을 나타나 있는 페이지 수로 알 수 있고 5페이지 이상을 가지고 있다면 화살표까지 나타나 있다는 것을 알 수 있다.
화살표가 있는 경우는 페이지수가 많은 경우이기 때문에 너무 많은 요청을 보내는 것이 필요하므로 이 화살표 버튼을 눌러 다음으로 가는 코드를 작성하지는 않을 것이다. 
대신 첫 번째 페이지에서 보이는 페이지 수만큼만 스크래핑하는 코드를 짜 볼 것이다.


2. 위를 위해서는 프로그램의 작동 원리가 좀 바뀌어야 한다. 
우선, 프로그램이 검색한 첫번째 페이지로 가도록 해야 한다.
그리고 얼마나 많은 페이지가 있는지를 알아내야 한다.
그러고 나서 각 페이지에 요청을 보내 데이터를 추출해낼 것이다.

따라서 앞선 시간에 작성했던 페이지에서 데이터를 추출하는 코드는 함수에 넣어주어 필요할 때에 사용해야 한다.
함수의 이름은 extract_indeed_jobs이고 함수의 parameter는 keyword라고 작성해 주었고 인자로 자신이 검색하고 싶은 단어를 넣으면 된다.


3. 이제 페이지 수를 알아내는 함수를 만들어 보자.
이를 알아내기 위해서는 역시 검색해서 나오는 첫 페이지를 요청해야 하므로 함수 앞부분은 앞에서 적어주었던 코드 그대로 적어준다.
def get_page_count(keyword):
  options = Options()
  options.add_argument("--no-sandbox")
  options.add_argument("--disable-dev-shm-usage")

  browser = webdriver.Chrome(options=options)

  base_url = "https://kr.indeed.com/jobs?q="

  browser.get(f"{base_url}{keyword}")      --> 앞처럼 검색어를 지정해주는 대신에 함수의 인자로써 오는 것을 받는다.

  soup = BeautifulSoup(browser.page_source, "html.parser")     --> 검색 첫 페이지의 브라우저 소스 코드를(HTML코드) html.parser를 작성해 줌으로써 데이터 구조로 바꾼다.
  pagination = soup.find("nav", class_="ecydgvn0")     --> 페이지 수 부분 전체에 해당하는 ecydgvn0 class를 가진 nav tag를 하나만 찾는다.
  pages = pagination.find("div", recursive=False)     --> pagination에 속하는 div의 개수를 찾는 것이 곧 전체 페이지수가 되므로 적어주었다. but div에 속하는 코드는 
                                                                      찾고 싶지 않으므로 recursive=False도 적어 주었다.
print(len(pages))를 적고 "python"을 함수의 인자로 하여 결과를 확인해 보자. 6이라는 결과가 나왔다. 다섯 개의 페이지와 화살표까지 포함하여 6이라는 결과가 나오는 것이
맞다.

but pagination이 None이라면 find_all 사용이 불가하다.(오류가 뜬다.) 말 그대로 pagination이 존재하지 않기 때문이다. 실제로 nest를 사이트에 검색해 보면 검색 결과 
수가 적어서 페이지 수가 나오지 않는 것을 볼 수 있다. 즉, pagination이 None 일 때 스크래핑 할 페이지는 하나라는 의미이다.
(강의에서는 위처럼 나왔지만 내가 실행했을 때는 길이가 0으로 출력되었음. 오류가 뜨지 않았음.)
따라서 None이 나왔을 때 혹시라도 오류가 뜨지 않게 다음과 같은 조건문을 추가해 준다.
pagination = soup.find("nav", class_="ecydgvn0")
  if pagination == None:     --> 주목!!
    return 1
  pages = pagination.find_all("div", recursive=False)

즉, 우리가 작성한 함수는 페이지 수가 2 이상일때만 잘 작동하는 함수이다.