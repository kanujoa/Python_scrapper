1. indeed 사이트에서 2번 페이지로 가면 주소에 start=10 이 추가되는 것을 볼 수 있다. 3번 페이지로 가면 start=20 이 추가된다. 즉, 한 페이지를 넘길 때마다 start에
10씩 추가되는 것을 볼 수 있다. 따라서 브라우저로 접근하여 요청을 보내는 주소가 검색어가 달라질 때 뿐만 아니라 페이지가 달라질 때 또한 달라져야 하므로 이것을
코드에 반영해 준다.
(range 함수에 들어가는 인자는 page수 하나이므로 0부터 마지막 페이지 수-1 숫자까지 가능하다. 따라서 첫 번째 페이지가 start=0에 해당한다.)

browser.get(f"{base_url}{keyword}&start={page*10}")     --> extract_indeed_jobs 함수에 있는 browser.get이다.

* start=0은 start 없이 요청하는 것과 같은 결과가 나온다.

final_url = f"{base_url}{keyword}&start={page*10}"
print("Requesting", final_url)
browser.get(final_url)     --> 다음과 같이 깔끔하게 작성 가능하다.


2. jobs = extract_indeed_jobs("python")
   print(jobs)     --> 이렇게 입력하여 결과를 확인하면 Requesting final_url 코드들과 job_data들이 result에 담겨져서 나오는 모습을 볼 수 있다.


3. 이제 indeed 스크래퍼도 다 만들어 졌으므로 extractors에 indeed.py 라는 이름으로 코드를 저장한다. extract_indeed_jobs 함수의 return results 부분이 중요한 
부분이다. 다 옮겼으면 main.py 파일은 비어 있어야 한다.