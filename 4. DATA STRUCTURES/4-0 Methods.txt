이번 시간에는 data structure(자료 구조)를 사용하여 데이터 구조화에 관해 알아볼 것이다.

1. 우리가 배워야 할 파이썬의 데이터 구조 3가지
- list     - tuple     - dictionary

data structure란? 
데이터를 구조화하고 싶을 때 사용하는 것이다.

2. list
한 개의 variable 안에 우리는 모든 데이터를 넣을 수 있어야 한다. 우리는 지금까지 mon = "Mon", tue = "Tue"..... 이렇게 한 개의 변수에
한 개의 자료형을 넣는 식으로 해 왔다. but 이제는 variable 한 개가 모든 요일을 가지고 있기를 원한다.

다음과 같이 모든 요일을 한 개의 문자열에 넣으면 가능하기는 하다.
days_of_week = "Mon, Tue, Wed, Thu, Fri"
but 이 방법을 사용하면 만약 내가 한 주 중 특정 순서의 요일을 필요로 할 때 그것을 뽑아내기가 불가능하다. 따라서 'list'가 필요하다.

list를 만들기 위해서는 [ ](대괄호)를 사용하고 list 안에 데이터를 넣을 때에는 쉼표를 사용해서 데이터를 분리한다.
days_of_week = ["Mon", "Tue", "Wed", "Thur", "Fri"]
print(days_of_week)     --> 결과: ['Mon', 'Tue', 'Wed', 'Thur', 'Fri']

3. method
name = "nico"
print(name.upper())     --> print(name)에서 name 바로 옆에 .을 붙여주면 많은 메서드들이 보이는 것을 확인할 수 있다. 
                                   이것들은 보이다싶이 함수이다.
우리는 그냥 단순하게 "nico"라고 text를 입력하였지만 사실 이 텍스트는 내부에 다양한 function들을 가지고 있다. .을 작성하여 보이는 
모든 function 목록들은 name이라는 variable에 결합되어 있다.
정확하게 말하면 string이나 number와 같은 것들이 내부에 가지고 있는 function은 method라고 부르는 것이 맞다. method는 데이터
뒤에 결합(연결)된 function이다. method는 데이터를 변환해 준다.
위에서 작성한 upper method는 name의 데이터를 가져와서 대문자로 바꾸어 주는 역할을 한다.

print(name.capitalize())는 데이터의 첫 번째 글자를 대문자로 바꾸는 기능을 한다.      --> 결과: Nico

replace 메서드는 어떤 문자를 다른 문자로 대체하는 기능을 한다. data.replace("old", "new")라고 입력하면 data에 있는 모든 old에 해당
하는 부분이 new로 대체되게 된다.
split 메서드는 string을 분리시키는 기능을 한다.
startswith 메서드에 어떠한 문자를 인자로 넣어주면 data가 그 문자로 시작하는지를 boolean type으로 나오는 결과를 통해 확인할 수 
있다. endswith도 특정 문자로 끝나는지의 여부를 알 수 있다.

<정리>
- method는 data에 결합된 function이다. data명을 작성해 주지 않고 method만 쓰는 것은 불가능하다.
- input()이나 print()같은 함수는 data에 결합되어 있지 않은 우리가 쓰고 싶을 때 어디에서나 쓸 수 있는 function이다.
